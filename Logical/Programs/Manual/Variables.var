VAR
	ImageDisplayTON : TON;
	JogEnableVar : BOOL; (*Jog enablling variable*)
	FlagAdd : BOOL; (*Flag that enables user to see if additive move is active*)
	ManualStep : ManualStepsEnum; (*Enum steps of Manual's state machine*)
	ManualStop : BOOL := FALSE; (*Stopping all of the processes*)
	ManualDistance : LREAL := 300; (*Setting distance of the belt move [mm]*)
	ManualActuatorDosing : BOOL; (*Enabling dosing actuator*)
	ManualActuatorSorting : BOOL; (*Enabling sorting actuator*)
	ManualActuatorBoth : BOOL; (*Enabling both actuators*)
	BeltMoveAdditive : BOOL; (*Activating additive move*)
	ManualActuatorNone : BOOL; (*Disabling both actuators*)
	BeltMoveVelocityOn : BOOL; (*Activating velocity move*)
	BeltMoveVelocityOff : BOOL; (*Disactivating velocity move*)
	ManualVelocity : REAL := 50; (*Value of velocity [mm/s]*)
	StartButtonState : BOOL; (*State of Manual Start button*)
	DirectionChangeVelocity : BOOL; (*Switching the direction of velocity value / multiplying by -1*)
	DirectionChangeDistance : BOOL; (*Switching the direction of distance value / multiplying by -1*)
	FlagActBoth : BOOL; (*Flag for both enabled actuators*)
	FlagActNone : BOOL; (*Flag for none of enabled actuators*)
	FlagActSorting : BOOL; (*Flag for sorting actuator enabled *)
	FlagActDosing : BOOL; (*Flag for dosing actuator enabled*)
	MC_BR_JogVelocity_0 : MC_BR_JogVelocity; (*Jog velocity*)
	FlagManual : BOOL; (*Flag that enables user to see if manual mode is enabled*)
	ExposureTime : UDINT; (*Camera exposure time*)
	SetFocus : USINT; (*Setting focus of camera*)
	ManualStepAct : ManualStepsActEnum; (*Steps of the actuator state machine*)
	FlagActBothOff : BOOL; (*Flag of the disabled both of actuators*)
	FlagActDosingOff : BOOL; (*Flag of the disabled dosing actuator*)
	FlagActNoneOff : BOOL; (*Flag of the disabled both of actuators*)
	FlagActSortingOff : BOOL; (*Flag of the disabled sorting actuator*)
	FlagNotManual : BOOL; (*Flag that enables user to see if manual mode is disabled*)
	NotMoveActive : BOOL; (*Flag that enables user to see if move is not active*)
	AxisPowerOn : BOOL; (*Enabling power of the motor*)
	FlagArrowLeft : BOOL; (*Motor is rotating to the left side*)
	FlagArrowRight : BOOL; (*Motor is rotating to the right side*)
	AxisPowerOff : BOOL; (*Turning off the power of the axis*)
	FlagVelAddOff : BOOL; (*Flag that enables user to see if additive and velocity move is turned off*)
	PhotoShoot : BOOL; (*Shooting a photo*)
	PhotoShow : BOOL; (*Displaying a photo*)
	FlagVel : BOOL; (*Flag that enables user to see if velocity  move is active*)
	sCamera : CameraEnum;
	ImageShootTON : TON;
END_VAR
